FROM node:18-alpine AS base

FROM base AS builder
RUN apk update && \
    apk add --no-cache libc6-compat && \
    npm install -g turbo

WORKDIR /app
COPY . .
RUN turbo prune backend --docker

FROM base AS installer
WORKDIR /app

RUN apk update && \
    apk add --no-cache libc6-compat && \
    npm install -g pnpm

COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/pnpm-lock.yaml ./pnpm-lock.yaml
RUN pnpm install --frozen-lockfile

# Copy source code after dependencies are installed
COPY --from=builder /app/out/full/ .

# Uncomment and use build args to enable remote caching
# ARG TURBO_TEAM
# ENV TURBO_TEAM=$TURBO_TEAM

# ARG TURBO_TOKEN
# ENV TURBO_TOKEN=$TURBO_TOKEN

RUN pnpm turbo build && \
    pnpm turbo db:generate

FROM base AS runner
WORKDIR /app

# Don't run production as root
RUN addgroup --system --gid 1001 expressjs
RUN adduser --system --uid 1001 expressjs
USER expressjs
COPY --from=installer /app .

EXPOSE 4050

CMD ["node", "apps/api/dist/index.js"]

